---
- name: Install required packages
  apt: state=installed pkg={{ item }}
  with_items:
    - git
    - openssl
    - curl
    - python3-pip

- name: Create certificate farmer user account
  user:
    name: "{{lle_certificate_user}}"
    password: "{{ lle_certificate_user_password }}"
    system: yes
    shell: /bin/nologin

- name: Clone dehydrated repository from github
  git:
    repo: https://github.com/lukas2511/dehydrated.git
    dest:  "{{ lle_dehydrated_repo }}"
    force: yes

- name: Transfer ownership of dehydrated repository
  file:
    path: "{{ lle_dehydrated_repo }}"
    state: directory
    owner: "{{ lle_certificate_user }}"
    group: "{{ lle_certificate_user }}"
    mode: 0755

- name: Make dehydrated script executable
  file:
      path: "{{lle_dehydrated_repo}}/dehydrated"
      state: touch
      mode: "u+x"

- name: Create file containing domains
  template:
    src: templates/domains.txt.j2
    dest: "{{ lle_dehydrated_repo}}/domains.txt"
    mode: 0600
    owner: "{{ lle_certificate_user }}"
    group: "{{ lle_certificate_user }}"

- name: "Install pip packages"
  # Install lexicon package for user only instead of system-wide.
  # Requires Ansible pipelining or world-readable module files.
  become_user: "{{ lle_certificate_user }}"
  pip:
    name: dns-lexicon
    state: present
    executable: /usr/bin/pip3

- name: Transfer ownership of lexicon
  file:
    path: "/usr/local/bin/lexicon"
    recurse: yes
    state: directory
    owner: "{{ lle_certificate_user }}"
    group: "{{ lle_certificate_user }}"
    mode: 0700

- name: Copy hook file template
  template:
    src: templates/dehydrated.default.sh.j2
    dest: "{{ lle_dehydrated_hook_path}}"
    mode: 0700
    owner: "{{ lle_certificate_user }}"
    group: "{{ lle_certificate_user }}"

- name: Copy dehydrated config file
  template:
    src: templates/config.j2
    dest: "{{ lle_dehydrated_repo}}/config"
    mode: 0600
    owner: "{{ lle_certificate_user }}"
    group: "{{ lle_certificate_user }}"

- name: Register and accept Lets Encrypt CA terms and conditions
  command: "{{ lle_dehydrated_repo}}/dehydrated --register --accept-terms"
  become_user: "{{ lle_certificate_user }}"

- name: Create certs directory
  file:
    path: "{{ lle_dehydrated_repo}}/certs"
    state: directory
    mode: 0750
    owner: "{{ lle_certificate_user }}"
    group: "{{ lle_cert_readonly_group }}"

- name: Copy certificate generation script (cron script)
  template:
    src: templates/letsencrypt.sh.j2
    dest: "{{ lle_scheduled_script }}"
    mode: 0700
    owner: "{{ lle_certificate_user }}"
    group: "{{ lle_certificate_user }}"

- name: Schedule certificate generation
  cron:
      name: "letsencrypt-certificate-renewal-{{ item }}"
      user: "{{ lle_certificate_user }}"
      job: "{{ lle_scheduled_script }}"
      special_time: "{{ item }}"
  with_items:
      - weekly
      - reboot

- name: Send cron mails to root
  cronvar:
      name: MAILTO
      value: root
      user: "{{ lle_certificate_user }}"
